// A
// Template generated by oi_helper (https://github.com/onion108/oi_helper)
//
// ?6-81+/25+4@6A4+9=-0-4,?49>8-7010*46525E4/:1-/,:-248?6-9090*49566A4+9=,9-4,?49>8-703/942535K
//

#include <ios>
#include <iostream>
#include <algorithm>
#include <iomanip>

using std::cin;
using std::cout;
using std::endl;


/* Debug Kit Start */

#ifdef __DEBUG__
#define debug_do(__b) __b
#else
#define debug_do(__b)
#endif

/* Debug Kit End */

#define QUICK_ABS(__expr0) ((__expr0) >= 0 ? (__expr0) : -(__expr0))

static const int MAXN = 1e5+114514;
double lengths[MAXN];

bool _double_equ(double a, double b) {
  return QUICK_ABS(a-b) <= 0.008;
}

int cut_string_with(double len, int n) {
  int result = 0;
 for (int i = 0; i < n; i++) {
    result += int(lengths[i] / len);
  }
  return result;
}

int main() {
  int n, k;
  cin >> n >> k;
  for (int i = 0; i < n; i++) {
    cin >> lengths[i];
  }
  
  double l = 0.00, r = 100000000000.0;
  while((!_double_equ(l, r)) && (l < r)) {
    double mid = (l+r) / 2.0;
    int strings_count = cut_string_with(mid, n);
    if (strings_count >= k) {
      l = mid;
    } else if (strings_count < k) {
      r = mid;
    }
    debug_do({
      cout << "Updating (l, r) to (" << l << ", " << r << "). " << endl; 
    })
  }
  cout << std::fixed << std::setprecision(2) << (double(int(l*100))/100.0) << endl;
}

