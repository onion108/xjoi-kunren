// A
// Template generated by oi_helper (https://github.com/onion108/oi_helper)
//

#include <cstdlib>
#include <iostream>
#include <algorithm>

using std::cin;
using std::cout;
using std::endl;


/* Debug Kit Start */

#ifdef __DEBUG__
#define debug_do(__b) __b
#else
#define debug_do(__b)
#endif

/* Debug Kit End */



static const int MAXN = 1e5+114514;
bool g_visited[MAXN];
int g_seq[MAXN];
int g_counter = 0;

void hairetsu_for_n(int nn, int n, int k) {
    if (n == 1) {
        g_counter++;
        if (g_counter == k) {
            for (int i = 1; i < nn; i++) {
                cout << g_seq[i] << ' ';
            }
            for (int i = 1; i <= nn; i++) {
                if (!g_visited[i]) {
                    cout << i << endl;
                    exit(0);
                }
            }
        }
    } else {
        for (int i = 1; i <= nn; i++) {
            if (!g_visited[i]) {
                g_visited[i] = true;
                g_seq[nn-n+1] = i;
                hairetsu_for_n(nn, n-1, k);
                g_visited[i] = false;
            }
        }
    }
}

int main() {
    int n, k;
    cin >> n >> k;
    hairetsu_for_n(n, n, k);
}

