// A
// Template generated by oi_helper (https://github.com/onion108/oi_helper)
//
// Program author 27Onion, contest https://www.xinyoudui.com/courses/165/, A
// All right reserved. (2022)
//

#include <iostream>
#include <algorithm>
#include <type_traits>
#include <vector>
#include <map>

using std::cin;
using std::cout;
using std::endl;

// The problem solver model.
class ProblemSolver {

  // Data Area

  // The height of alien kids.
  std::vector<int> kids_lengths;

  // Store the answer of the problem
  int answer;
    
  // End Data
  
  // Input the data from the stdin.
  void _input() {

    // Input the array's length.
    int n;
    cin >> n;

    // Input the array's data.
    for (int i = 0; i < n; i++) {

      // Input the current data.
      int current;
      cin >> current;

      // Add the current data into the kids' lengths.
      kids_lengths.push_back(current);

    }

  }

  // Check if i make j comfortable.
  bool _comfortable(int i, int j) {
    return kids_lengths[j] - kids_lengths[i] == j - i;
  }

  // Solve the problem.
  void _solve() {

    answer = 0;

    // Iterate over each possible sets and test on it.
    for (int i = 0; i < kids_lengths.size(); i++) {
      for (int j = 0; j < kids_lengths.size(); j++) {

        // If the two are same, it's meaningless.
        // Just skip it.
        if (i == j) {
          continue;
        }

        // Test if i makes j incomfortable.
        if (!_comfortable(i, j)) {
          answer++;
        }

      }
    }

  }

    // Output the data to the stdout.
  void _output() {
    // Experimental: Maybe the answer would be half due to (i, j) and (j, i)s are in pairs...?
    cout << (answer / 2) << endl;
  }

  public:

  // Start a new problem solver.
  // The problem solver is splitted into three stages in this case:
  // Input stage: Input the data from stdin.
  // Solve stage: Solve the problem using the inputted data.
  // Output stage: Output the data to stdout.
  ProblemSolver() {

    // Input stage.
    _input();

     // Solve stage.
    _solve();

    // Output stage.
    _output();

  }

};


// The entry function of the program.
int main() {
  ProblemSolver solver;
}

